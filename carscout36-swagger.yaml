swagger: "2.0"
info:
  description: "A simple RESTful web-service that allows users to place new car adverts and view, modify and delete existing car adverts."
  version: "1.0.0"
  title: "CarScout36"
  contact:
    email: "samy@samyateia.de"
host: "cars.samyateia.de"
basePath: "/v1"
tags:
- name: "Adverts"
  description: "All endpoints regarding adverts"
schemes:
- "http"
paths:
  /adverts:
    get:
      tags:
      - "Adverts"
      summary: "Retrieves all adverts sorted by id, or optionally sorted by field"
      description: "A field to sort by can be provided with the query parameter sortby"
      operationId: "getAdverts"
      produces:
      - "application/json"
      parameters:
      - name: "sortby"
        in: "query"
        description: "Field to sort by"
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Advert"
    post:
      tags:
      - "Adverts"
      summary: "Add a new advert to the store"
      description: ""
      operationId: "addAdvert"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Advert object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Advert"
      responses:
        200:
          description: "successful operation, returns added advert"
          schema:
            $ref: "#/definitions/Advert"
        400:
          description: "Invalid advert supplied"
  /adverts/{advertId}:
    get:
      tags:
      - "Adverts"
      summary: "Find advert by ID"
      description: "Returns a single advert by id"
      operationId: "getAdvertById"
      produces:
      - "application/json"
      parameters:
      - name: "advertId"
        in: "path"
        description: "ID of advert to return"
        required: true
        type: "string"
        format: "uuid"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Advert"
    put:
      tags:
      - "Adverts"
      summary: "Update an existing advert"
      description: ""
      operationId: "updateAdvert"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "advertId"
        in: "path"
        description: "ID of advert to return"
        required: true
        type: "string"
        format: "uuid"
      - name: "advert"
        in: "body"
        description: "Advert object that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/Advert"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid advert supplied"
        404:
          description: "Advert not found"
    delete:
      tags:
      - "Adverts"
      summary: "Deletes an advert"
      description: ""
      operationId: "deleteAdvert"
      produces:
      - "application/json"
      parameters:
      - name: "advertId"
        in: "path"
        description: "Id of advert to delete"
        required: true
        type: "string"
        format: "uuid"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Advert not found"
definitions:
  Advert:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
      title:
        type: "string"
        example: "Audi A4 Avant"
      fuel:
        type: "string"
        enum: ["diesel", "gasoline"]
      price:
        type: integer
        example: 8000
      new:
        type: boolean
        example: false
      mileage:
        type: integer
        example: 220000
      first registration:
        type: string
        format: date
        example: "2017-01-31"
    required:
      - title
      - id
      - fuel
      - price
      - new
      
      
      
      